<!DOCTYPE html>
<html lang="en">
<head> 
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ðŸŽ® Book a Gaming Session | Maximum Gamers</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
  <link rel="manifest" href="/manifest.json">

  <style>
    :root {
      --primary-bg: #121212;
      --card-bg: #1e1e1e;
      --input-bg: #2a2a2a;
      --primary-color: #0d6efd;
      --success-color: #198754;
      --text-light: #ffffff;
      --text-muted: #aaaaaa;
      --border-color: #444444;
    }
    
    body {
      background: var(--primary-bg);
      color: var(--text-light);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    
    .container { 
      max-width: 900px; 
      padding: 1rem;
    }
    
    .card {
      background: var(--card-bg);
      border-radius: 12px;
      padding: 2rem;
      margin-top: 2rem;
      box-shadow: 0 0 20px rgba(0,0,0,0.5);
      border: 1px solid var(--border-color);
    }
    
    .form-control {
      background: var(--input-bg);
      color: var(--text-light);
      border: 1px solid var(--border-color);
      border-radius: 8px;
    }
    
    .form-control:focus {
      box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
      border-color: var(--primary-color);
    }
    
    .btn-success {
      background: var(--success-color);
      border: none;
      border-radius: 8px;
      padding: 0.75rem;
      font-weight: 600;
      transition: all 0.3s ease;
    }
    
    .btn-success:hover { 
      background: #0f6e45;
      transform: translateY(-2px);
    }

    /* Booking table row highlight for updates */
    #userBookingsTable tbody tr.updated {
      background: rgba(0, 255, 255, 0.15);
      box-shadow: 0 0 15px rgba(0, 255, 255, 0.6);
      transform: scale(1.02);
      transition: all 0.3s ease;
    }

    /* Footer styles */
    .shiny-line {
      height: 4px;
      width: 100%;
      background: linear-gradient(90deg, #ffd700, #ff8c00, #ffd700);
      animation: shine 2s linear infinite;
      margin-bottom: 15px;
      background-size: 200% 100%;
    }
    
    @keyframes shine {
      0% { background-position: 0% 50%; }
      100% { background-position: 100% 50%; }
    }
    
    footer {
      margin-top: auto;
      background: #0d0d0d;
      color: var(--text-muted);
      text-align: center;
      padding: 1rem 0;
      font-size: 0.9rem;
    }
    
    footer a {
      transition: color 0.3s ease;
      color: var(--text-light) !important;
    }
    
    footer a:hover {
      color: #00ff99 !important;
      text-decoration: underline;
    }
    
    /* Badge styles */
    .badge {
      font-weight: 500;
      padding: 0.5em 0.75em;
      border-radius: 6px;
    }
    
    /* Alert styles */
    .alert {
      border-radius: 10px;
      border: none;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
      .container {
        padding: 0.5rem;
      }
      
      .card {
        padding: 1.5rem;
        margin-top: 1.5rem;
      }
      
      h1 {
        font-size: 1.75rem;
      }
      
      h2 {
        font-size: 1.5rem;
      }
      
      .lead {
        font-size: 1rem;
      }
    }
    
    @media (max-width: 576px) {
      .card {
        padding: 1rem;
      }
      
      h1 {
        font-size: 1.5rem;
      }
      
      h2 {
        font-size: 1.25rem;
      }
      
      h5 {
        font-size: 1rem;
      }
      
      .table {
        font-size: 0.875rem;
      }
      
      .btn-success {
        padding: 0.5rem;
      }
      
      .form-label {
        font-weight: 600;
      }
    }
    
    /* Animation for status updates */
    @keyframes highlightUpdate {
      0% { background-color: rgba(0, 255, 255, 0.3); }
      100% { background-color: transparent; }
    }
    
    .status-update {
      animation: highlightUpdate 2s ease;
    }
  </style>
</head>
<body>

  <div class="container">
    <!-- ===== Welcome Section ===== -->
    <div class="text-center mt-4 mt-md-5">
      <h1 class="fw-bold text-success mb-3">Welcome to Maximum Gamers ðŸŽ®</h1>
      <p class="lead text-light mb-4">
        Book your favorite gaming sessions, secure a console, and enjoy uninterrupted gameplay.  
        Select your game, console, date, and time slot â€” and we'll reserve it for you.
      </p>
    </div>

    <!-- ===== Status Explanation ===== -->
    <div class="alert alert-info shadow-sm">
      <h5 class="fw-bold mb-3">ðŸ“Œ Booking Status Explained:</h5>
      <ul class="mb-0 ps-3">
        <li class="mb-2"><span class="badge bg-warning">Pending</span> â€” Awaiting confirmation from our team.</li>
        <li class="mb-2"><span class="badge bg-success">Confirmed</span> â€” Your booking is secured. Get ready!</li>
        <li class="mb-2"><span class="badge bg-primary">Completed</span> â€” You enjoyed your gaming session ðŸŽ‰.</li>
        <li><span class="badge bg-danger">Cancelled</span> â€” Your booking was canceled. You can rebook anytime.</li>
      </ul>
    </div>

    <!-- ===== Booking Card ===== -->
    <div class="card mt-4">
      <h2 class="mb-4 text-center text-success">ðŸŽ® Book a Gaming Session</h2>

      <!-- ===== Booking Form ===== -->
      <form id="bookingForm" class="row g-3">
        <div class="col-md-6">
          <label class="form-label">Game</label>
          <input type="text" name="game" class="form-control" placeholder="Enter game name" required>
        </div>
        <div class="col-md-6">
          <label class="form-label">Console</label>
          <input type="text" name="console" class="form-control" placeholder="Enter console type" required>
        </div>
        <div class="col-md-6">
          <label class="form-label">Date</label>
          <input type="date" name="date" class="form-control" required>
        </div>
        <div class="col-md-6">
          <label class="form-label">Time Slot</label>
          <input type="time" name="timeSlot" class="form-control" required>
        </div>
        <div class="col-12 mt-3">
          <button type="submit" class="btn btn-success w-100 py-2">
            <i class="bi bi-calendar-check me-2"></i> Book Now
          </button>
        </div>
      </form>

      <div id="bookingMessage" class="mt-3"></div>

      <!-- ===== User Bookings Table ===== -->
      <div class="mt-5">
        <h5 class="text-success mb-3">ðŸ“‹ Your Bookings</h5>
        <div class="table-responsive">
          <table class="table table-striped table-dark" id="userBookingsTable">
            <thead>
              <tr>
                <th>ID</th>
                <th>Game</th>
                <th>Console</th>
                <th>Date</th>
                <th>Time Slot</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              <!-- User bookings populate dynamically -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <footer class="bg-dark text-white pt-3 position-relative mt-5">
    <!-- Shiny Line -->
    <div class="shiny-line"></div>

    <div class="text-center mb-3">
      <p class="mt-2 small">Empowering gamers to play, earn, and connect.</p>
    </div>

    <div class="container">
      <div class="row text-center text-md-start g-3">
        <div class="col-6 col-md-3">
          <h6 class="fw-bold">Discover</h6>
          <ul class="list-unstyled">
            <li><a href="/gaming" class="text-decoration-none">Gaming Sessions</a></li>
            <li><a href="/loans" class="text-decoration-none">Quick Loans</a></li>
            <li><a href="/shop" class="text-decoration-none">Store</a></li>
          </ul>
        </div>
        <div class="col-6 col-md-3">
          <h6 class="fw-bold">Our Shop</h6>
          <ul class="list-unstyled">
            <li><a href="/about" class="text-decoration-none">About Us</a></li>
            <li><a href="/contact" class="text-decoration-none">Contact</a></li>
            <li><a href="/whatscoming" class="text-decoration-none">What's Coming</a></li>
          </ul>
        </div>
        <div class="col-6 col-md-3">
          <h6 class="fw-bold">Connect</h6>
          <ul class="list-unstyled">
            <li><a href="#" class="text-decoration-none">Instagram</a></li>
            <li><a href="#" class="text-decoration-none">Twitter</a></li>
            <li><a href="#" class="text-decoration-none">Facebook</a></li>
          </ul>
        </div>
        <div class="col-6 col-md-3">
          <h6 class="fw-bold">Legal</h6>
          <ul class="list-unstyled">
            <li><a href="/privacy-policy" class="text-decoration-none">Privacy Policy</a></li>
            <li><a href="/terms" class="text-decoration-none">Terms & Conditions</a></li>
            <li><a href="/refund-policy" class="text-decoration-none">Refund Policy</a></li>
          </ul>
        </div>
      </div>

      <div class="mt-4 text-center small">
        &copy; 2025 Maximum Gamers. All Rights Reserved.
      </div>
    </div>
  </footer>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const socket = io();
    const form = document.getElementById("bookingForm");
    const msgDiv = document.getElementById("bookingMessage");
    const bookingsTbody = document.querySelector("#userBookingsTable tbody");

    // Add or update a booking row
    function addOrUpdateRow(b) {
      let row = document.getElementById(`booking-${b._id}`);
      const badgeClass = b.status === "Pending" ? "warning" :
                         b.status === "Confirmed" ? "success" :
                         b.status === "Completed" ? "primary" :
                         b.status === "Cancelled" ? "danger" : "secondary";

      if (row) {
        // Update existing row
        row.querySelector("td:nth-child(2)").textContent = b.game;
        row.querySelector("td:nth-child(3)").textContent = b.console;
        row.querySelector("td:nth-child(4)").textContent = new Date(b.date).toLocaleDateString();
        row.querySelector("td:nth-child(5)").textContent = b.timeSlot;
        const statusCell = row.querySelector("td:nth-child(6) span");
        statusCell.textContent = b.status;
        statusCell.className = `badge bg-${badgeClass}`;
        row.classList.add("updated");
        setTimeout(() => row.classList.remove("updated"), 3000);
      } else {
        // Add new row
        row = document.createElement("tr");
        row.id = `booking-${b._id}`;
        row.classList.add("updated");
        row.innerHTML = `
          <td>${b._id}</td>
          <td>${b.game}</td>
          <td>${b.console}</td>
          <td>${new Date(b.date).toLocaleDateString()}</td>
          <td>${b.timeSlot}</td>
          <td><span class="badge bg-${badgeClass}">${b.status}</span></td>
        `;
        bookingsTbody.appendChild(row);
        setTimeout(() => row.classList.remove("updated"), 3000);
      }
    }

    // Fetch all bookings for this user
    async function fetchBookings() {
      try {
        const res = await fetch("/gaming/bookings/json");
        const bookings = await res.json();
        bookingsTbody.innerHTML = "";
        
        if (bookings.length === 0) {
          bookingsTbody.innerHTML = `
            <tr>
              <td colspan="6" class="text-center py-4 text-muted">
                <i class="bi bi-calendar-x me-2"></i>No bookings yet
              </td>
            </tr>
          `;
        } else {
          bookings.forEach(addOrUpdateRow);
        }
      } catch (err) {
        console.error(err);
        bookingsTbody.innerHTML = `
          <tr>
            <td colspan="6" class="text-center py-4 text-danger">
              <i class="bi bi-exclamation-triangle me-2"></i>Error loading bookings
            </td>
          </tr>
        `;
      }
    }

    // Initial load
    fetchBookings();

    // Handle booking form submission
    form.addEventListener("submit", async e => {
      e.preventDefault();
      const submitBtn = form.querySelector('button[type="submit"]');
      const originalText = submitBtn.innerHTML;
      
      // Show loading state
      submitBtn.disabled = true;
      submitBtn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Processing...';
      
      const data = {
        game: form.game.value,
        console: form.console.value,
        date: form.date.value,
        timeSlot: form.timeSlot.value
      };
      
      try {
        const res = await fetch("/gaming/book", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data)
        });
        const result = await res.json();
        
        if (result.success) {
          msgDiv.innerHTML = `
            <div class="alert alert-success alert-dismissible fade show">
              <i class="bi bi-check-circle-fill me-2"></i>${result.message}
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          `;
          addOrUpdateRow(result.booking);
          form.reset();
        } else {
          msgDiv.innerHTML = `
            <div class="alert alert-danger alert-dismissible fade show">
              <i class="bi bi-exclamation-triangle-fill me-2"></i>${result.message}
              <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
          `;
        }
      } catch (err) {
        msgDiv.innerHTML = `
          <div class="alert alert-danger alert-dismissible fade show">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>Server error: ${err.message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          </div>
        `;
      } finally {
        // Reset button state
        submitBtn.disabled = false;
        submitBtn.innerHTML = originalText;
      }
    });

    
    // Toggle cart
    document.getElementById('cart-toggle').addEventListener('click', () => {
      const sidebar = document.getElementById('cart-sidebar');
      sidebar.style.display = sidebar.style.display === 'block' ? 'none' : 'block';
    });

    document.getElementById('close-cart').addEventListener('click', () => {
      document.getElementById('cart-sidebar').style.display = 'none';
    });

    document.getElementById('checkout-btn').addEventListener('click', () => {
      alert('Proceeding to checkout...'); 
      // Here, you can integrate your payment API
    });

    // Listen for admin or other updates via Socket.IO
    socket.on("updateBooking", addOrUpdateRow);
    socket.on("newBooking", addOrUpdateRow);
  </script>

  <!-- Bootstrap JS for alert dismissals -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>